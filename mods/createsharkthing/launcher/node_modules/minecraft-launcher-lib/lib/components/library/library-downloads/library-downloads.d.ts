import { Artifact, IArtifact } from '../../artifact';
import { ILibrary } from '../library';
export interface ILibraryDownloads {
    artifact: Partial<IArtifact>;
    classifiers: {
        [classifier: string]: Partial<IArtifact>;
    };
}
export declare class LibraryDownloads implements ILibraryDownloads {
    static from(libraryDownloads: Partial<ILibraryDownloads>, parentLibrary?: Pick<Partial<ILibrary>, 'name' | 'natives'>): LibraryDownloads;
    private _artifact;
    private _classifiers;
    constructor(artifact: Partial<IArtifact>, classifiers?: ILibraryDownloads['classifiers']);
    get artifact(): Artifact;
    set artifact(artifact: Artifact);
    get classifiers(): Record<string, Artifact>;
    setArtifactByClassifier(classifier: string, artifact: Partial<IArtifact>): Artifact;
    getArtifactByClassifier(classifier: string): Artifact;
    toJSON(): ILibraryDownloads;
}
