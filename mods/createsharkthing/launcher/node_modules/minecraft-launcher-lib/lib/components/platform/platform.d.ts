/// <reference types="node" />
/**
 * Mojang friendly platform name.
 */
export declare enum OS {
    WINDOWS = "windows",
    LINUX = "linux",
    OSX = "osx"
}
export interface IPlatform {
    arch: string;
    name: OS;
    version: string;
}
export declare class Platform implements IPlatform {
    name: OS;
    arch: string;
    version: string;
    static from(child: Partial<IPlatform>, parent?: Partial<IPlatform>): Platform;
    /**
     * Transforms node platform name to a Mojang-friendly platform name.
     * @param nodePlatform The node platform name. E.g. `win32`.
     */
    static friendlifyNodePlatform(nodePlatform: NodeJS.Platform): OS;
    /**
     * The current platform.
     */
    static get current(): Readonly<Platform>;
    private static _current;
    constructor(name?: OS, arch?: string, version?: string);
    /**
     * The classpath sep for this platform.
     */
    get classpathSeparator(): string;
}
