{"version":3,"sources":["../../../../src/components/m-version/m-version-arguments/m-version-arguments.ts"],"names":["MVersionArguments","from","child","parent","game","jvm","fromLegacyArguments","minecraftArguments","split","constructor","DEFAULT_JVM_ARGS","concat","_game","map","gameArg","Argument","_jvm","jvmArg","toJSON"],"mappings":";;;;;;;AACA;;;;AAkBO,MAAMA,iBAAN,CAAsD;AAS9C,SAAJC,IAAI,CAACC,KAAD,EAAqCC,MAArC,EAA8F;AACrG,QAAI,CAACA,MAAL,EAAa;AACT,UAAID,KAAK,YAAYF,iBAArB,EAAwC,OAAOE,KAAP;AACxCC,MAAAA,MAAM,GAAG,EAAT;AACH;;AAED,UAAM;AACFC,MAAAA,IAAI,GAAGD,MAAM,CAACC,IADZ;AAEFC,MAAAA,GAAG,GAAGF,MAAM,CAACE;AAFX,QAGFH,KAHJ;AAKA,WAAO,IAAIF,iBAAJ,CAAsBI,IAAtB,EAA4BC,GAA5B,CAAP;AACH;;AAEyB,SAAnBC,mBAAmB,CAACC,kBAAD,EAAgD;AACtE,WAAO,IAAIP,iBAAJ,CAAsBO,kBAAkB,CAACC,KAAnB,CAAyB,WAAzB,CAAtB,CAAP;AACH;;AAKDC,EAAAA,WAAW,CACPL,IAAwB,GAAG,EADpB,EAEPC,GAAuB,GAAGL,iBAAiB,CAACU,gBAAlB,CAAmCC,MAAnC,EAFnB,EAGT;AACE,SAAKC,KAAL,GAAaR,IAAI,CAACS,GAAL,CAASC,OAAO,IAAIC,mBAASd,IAAT,CAAca,OAAd,CAApB,CAAb;AACA,SAAKE,IAAL,GAAYX,GAAG,CAACQ,GAAJ,CAAQI,MAAM,IAAIF,mBAASd,IAAT,CAAcgB,MAAd,CAAlB,CAAZ;AACH;;AAEO,MAAJb,IAAI,GAAe;AAAE,WAAO,KAAKQ,KAAZ;AAAoB;;AAErC,MAAJR,IAAI,CAACA,IAAD,EAAmB;AACvB,SAAKQ,KAAL,GAAaR,IAAI,CAACS,GAAL,CAASC,OAAO,IAAIC,mBAASd,IAAT,CAAca,OAAd,CAApB,CAAb;AACH;;AAEM,MAAHT,GAAG,GAAe;AAAE,WAAO,KAAKW,IAAZ;AAAmB;;AAEpC,MAAHX,GAAG,CAACA,GAAD,EAAkB;AACrB,SAAKW,IAAL,GAAYX,GAAG,CAACQ,GAAJ,CAAQI,MAAM,IAAIF,mBAASd,IAAT,CAAcgB,MAAd,CAAlB,CAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAuB;AACzB,UAAM;AACFd,MAAAA,IADE;AAEFC,MAAAA;AAFE,QAGF,IAHJ;AAIA,WAAO;AACHD,MAAAA,IADG;AAEHC,MAAAA;AAFG,KAAP;AAIH;;AA3DwD;;;;gBAAhDL,iB,sBAEwD,CAC7D,CAAC,6CAAD,CAD6D,EAE7D,CAAC,kDAAD,CAF6D,EAG7D,CAAC,0CAAD,CAH6D,EAI7D,CAAC,KAAD,EAAQ,cAAR,CAJ6D,C","sourcesContent":["\nimport { Argument, IArgument } from '../../argument';\n\nexport type MVersionArgument = IArgument['value'] | Partial<IArgument>;\n\nexport interface IMVersionArguments {\n\n    /**\n     * This contains args for `minecraft.jar`.\n     */\n    game: MVersionArgument[];\n\n    /**\n     * The JVM args.\n     */\n    jvm: MVersionArgument[];\n\n}\n\nexport class MVersionArguments implements IMVersionArguments {\n\n    static readonly DEFAULT_JVM_ARGS: Readonly<MVersionArgument[]> = [\n        ['-Dminecraft.launcher.brand=${launcher_name}'],\n        ['-Dminecraft.launcher.version=${launcher_version}'],\n        ['-Djava.library.path=${natives_directory}'],\n        ['-cp', '${classpath}'],\n    ];\n\n    static from(child: Partial<IMVersionArguments>, parent?: Partial<IMVersionArguments>): MVersionArguments {\n        if (!parent) {\n            if (child instanceof MVersionArguments) return child;\n            parent = {};\n        }\n\n        const {\n            game = parent.game,\n            jvm = parent.jvm,\n        } = child;\n\n        return new MVersionArguments(game, jvm);\n    }\n\n    static fromLegacyArguments(minecraftArguments: string): MVersionArguments {\n        return new MVersionArguments(minecraftArguments.split(/\\s(?!\\$)/g));\n    }\n\n    private _game: Argument[];\n    private _jvm: Argument[];\n\n    constructor(\n        game: MVersionArgument[] = [],\n        jvm: MVersionArgument[] = MVersionArguments.DEFAULT_JVM_ARGS.concat(),\n    ) {\n        this._game = game.map(gameArg => Argument.from(gameArg));\n        this._jvm = jvm.map(jvmArg => Argument.from(jvmArg));\n    }\n\n    get game(): Argument[] { return this._game; }\n\n    set game(game: Argument[]) {\n        this._game = game.map(gameArg => Argument.from(gameArg));\n    }\n\n    get jvm(): Argument[] { return this._jvm; }\n\n    set jvm(jvm: Argument[]) {\n        this._jvm = jvm.map(jvmArg => Argument.from(jvmArg));\n    }\n\n    toJSON(): IMVersionArguments {\n        const {\n            game,\n            jvm,\n        } = this;\n        return {\n            game,\n            jvm,\n        };\n    }\n\n}\n"],"file":"m-version-arguments.js"}