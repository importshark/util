import { Argument, IArgument } from '../../argument';
export declare type MVersionArgument = IArgument['value'] | Partial<IArgument>;
export interface IMVersionArguments {
    /**
     * This contains args for `minecraft.jar`.
     */
    game: MVersionArgument[];
    /**
     * The JVM args.
     */
    jvm: MVersionArgument[];
}
export declare class MVersionArguments implements IMVersionArguments {
    static readonly DEFAULT_JVM_ARGS: Readonly<MVersionArgument[]>;
    static from(child: Partial<IMVersionArguments>, parent?: Partial<IMVersionArguments>): MVersionArguments;
    static fromLegacyArguments(minecraftArguments: string): MVersionArguments;
    private _game;
    private _jvm;
    constructor(game?: MVersionArgument[], jvm?: MVersionArgument[]);
    get game(): Argument[];
    set game(game: Argument[]);
    get jvm(): Argument[];
    set jvm(jvm: Argument[]);
    toJSON(): IMVersionArguments;
}
