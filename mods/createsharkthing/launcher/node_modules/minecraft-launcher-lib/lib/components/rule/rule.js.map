{"version":3,"sources":["../../../src/components/rule/rule.ts"],"names":["RuleAction","Rule","from","child","parent","action","Object","assign","os","features","sanitizeFeatures","fromEntries","entries","map","feature","value","Boolean","constructor","ALLOW","isAllowable","platform","currentPlatform","Platform","allowable","name","compare","version","result","match","arch","secureRuleFeatures","secureFeatures","forEach","a","b"],"mappings":"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","sourcesContent":["\nimport { Platform, IPlatform } from '../platform';\n\nexport enum RuleAction {\n    ALLOW = 'allow',\n    DISALLOW = 'disallow',\n}\n\nexport interface IRule {\n\n    action: RuleAction;\n\n    /**\n     * The required platform.\n     */\n    os: Partial<IPlatform>;\n\n    /**\n     * The enabled or disabled features.\n     */\n    features: Record<string, unknown>;\n\n}\n\nexport class Rule implements IRule {\n\n    static from(child: Partial<IRule>, parent?: Partial<IRule>): Rule {\n        if (!parent) {\n            if (child instanceof Rule) return child;\n            parent = {};\n        }\n\n        return new Rule(\n            child.action,\n            Object.assign({}, parent.os, child.os),\n            Object.assign({}, parent.features, child.features),\n        );\n    }\n\n    static sanitizeFeatures(features: Record<string, unknown>): Record<string, boolean> {\n        return Object.fromEntries(Object.entries(features).map(([feature, value]) => [feature, Boolean(value)]));\n    }\n\n    constructor(\n        public action = RuleAction.ALLOW,\n        public os: Partial<IPlatform> = {},\n        public features: Record<string, unknown> = {},\n    ) { }\n\n    /**\n     * Compare the current platform and enabled features with params and features\n     * of this rule required for this rule to take action.\n     *\n     * @param platform The current platform.\n     * @param features The enabled or disabled features.\n     *\n     * @returns The result for this rule.\n     */\n    isAllowable(\n        platform: Partial<IPlatform> = {},\n        features: Record<string, unknown> = {},\n    ): boolean {\n        const currentPlatform = Platform.from(platform);\n        let allowable = true;\n\n        {\n            if (this.os.name) {\n                allowable = this.compare(\n                    this.os.name === currentPlatform.name,\n                    this.os.name !== currentPlatform.name,\n                );\n            }\n\n            if (this.os.version) {\n                const result = currentPlatform.version.match(this.os.version);\n                allowable = this.compare(\n                    Boolean(result),\n                    !result,\n                );\n            }\n\n            if (this.os.arch) {\n                allowable = this.compare(\n                    this.os.arch === currentPlatform.arch,\n                    this.os.arch !== currentPlatform.arch,\n                );\n            }\n        } // compare platform\n\n        {\n            const secureRuleFeatures = Rule.sanitizeFeatures(this.features);\n            const secureFeatures = Rule.sanitizeFeatures(features); // secure enabled features\n\n            Object.entries(secureRuleFeatures).forEach(([feature, value]) => {\n                allowable = this.compare(\n                    secureFeatures[feature] === value,\n                    secureFeatures[feature] !== value,\n                );\n            });\n        }  // compare features\n\n        return allowable;\n    }\n\n    /**\n     * Compare two boolean values using this rule's action.\n     */\n    compare(a: boolean, b: boolean): boolean {\n        switch (this.action) {\n            case RuleAction.ALLOW: return a;\n            default: return b;\n        }\n    }\n\n}\n"],"file":"rule.js"}