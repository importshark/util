"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Asset = void 0;

var _constants = require("../../constants");

var _path = require("path");

var _artifact = require("../artifact");

class Asset {
  static from(child, parent) {
    if (!parent) {
      if (child instanceof Asset) return child;
      parent = {};
    }

    const {
      hash = parent.hash,
      size = parent.size
    } = child;
    if (!parent.path) throw new Error('missing parent asset path');
    if (!hash) throw new Error('missing asset hash');
    if (!size) throw new Error('missing asset size');
    return new Asset(parent.path, hash, size);
  }

  constructor(path, hash, size) {
    this.path = path;
    this.hash = hash;
    this.size = size;
  }
  /**
   * The first 2 hex letters of hash.
   */


  get subhash() {
    return this.hash.substring(0, 2);
  }
  /**
   * The legacy path. It should look like `virtual/legacy/<path>`, e.g. `virtual/legacy/lang/ru_RU.lang`.
   */


  get legacyPath() {
    return (0, _path.join)('virtual', 'legacy', this.path);
  }
  /**
   * The object path. It should look like `objects/<subhash>/<hash>`, e.g. `objects/00/00..b8f`.
   **/


  get objectPath() {
    return (0, _path.join)('objects', this.subhash, this.hash);
  }

  toArtifact(legacy = false, repoURL = _constants.MOJANG.RESOURCE_REPO) {
    return new _artifact.Artifact(legacy ? this.legacyPath : this.objectPath, `${repoURL}/${this.subhash}/${this.hash}`, this.size, this.hash);
  }

  toString() {
    return this.legacyPath;
  }

  toJSON() {
    const {
      hash,
      size
    } = this;
    return {
      hash,
      size
    };
  }

}

exports.Asset = Asset;
//# sourceMappingURL=asset.js.map