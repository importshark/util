{"version":3,"sources":["../../../../src/components/launcher/launcher-folder/launcher-folder.ts"],"names":["LauncherFolder","Folder","from","launcherLocation","Error","constructor","root","overrides","game","assets","join","natives","versions","libraries","libs","getLibraryPath","libraryPath","getVersionPath","versionId","getNativesPath"],"mappings":";;;;;;;AACA;;AACA;;AAWO,MAAMA,cAAN,SAA6BC,cAA7B,CAA+D;AAEvD,SAAJC,IAAI,CAACC,gBAAD,EAAqD;AAC5D,QAAIA,gBAAgB,YAAYH,cAAhC,EAAgD,OAAOG,gBAAP,CAAhD,KACK,IAAI,OAAOA,gBAAP,KAA4B,QAAhC,EAA0C;AAC3C,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACH;AAED,WAAO,IAAIJ,cAAJ,CAAmBG,gBAAnB,CAAP;AACH;;AAEDE,EAAAA,WAAW,CACPC,IADO,EAEAC,SAAiD,GAAG,EAFpD,EAGT;AACE,UAAMD,IAAN;AADF,SADSC,SACT,GADSA,SACT;AAED;;AAEO,MAAJC,IAAI,GAAW;AACf,WAAO,KAAKD,SAAL,CAAeC,IAAf,IAAuB,KAAKF,IAAnC;AACH;;AAEO,MAAJE,IAAI,CAACA,IAAD,EAAe;AACnB,SAAKD,SAAL,CAAeC,IAAf,GAAsBA,IAAtB;AACH;AAED;AACJ;AACA;;;AACc,MAANC,MAAM,GAAW;AACjB,WAAO,KAAKF,SAAL,CAAeE,MAAf,IAAyB,KAAKC,IAAL,CAAU,QAAV,CAAhC;AACH;;AAES,MAAND,MAAM,CAACA,MAAD,EAAiB;AACvB,SAAKF,SAAL,CAAeE,MAAf,GAAwBA,MAAxB;AACH;AAED;AACJ;AACA;;;AACe,MAAPE,OAAO,GAAW;AAClB,WAAO,KAAKJ,SAAL,CAAeI,OAAf,IAA0B,KAAKD,IAAL,CAAU,SAAV,CAAjC;AACH;;AAEU,MAAPC,OAAO,CAACA,OAAD,EAAkB;AACzB,SAAKJ,SAAL,CAAeI,OAAf,GAAyBA,OAAzB;AACH;;AAEW,MAARC,QAAQ,GAAW;AACnB,WAAO,KAAKL,SAAL,CAAeK,QAAf,IAA2B,KAAKF,IAAL,CAAU,UAAV,CAAlC;AACH;;AAEW,MAARE,QAAQ,CAACA,QAAD,EAAmB;AAC3B,SAAKL,SAAL,CAAeK,QAAf,GAA0BA,QAA1B;AACH;AAED;AACJ;AACA;;;AACiB,MAATC,SAAS,GAAW;AACpB,WAAO,KAAKN,SAAL,CAAeM,SAAf,IAA4B,KAAKH,IAAL,CAAU,WAAV,CAAnC;AACH;;AAEY,MAATG,SAAS,CAACA,SAAD,EAAoB;AAC7B,SAAKN,SAAL,CAAeM,SAAf,GAA2BA,SAA3B;AACH;AAED;AACJ;AACA;;;AACY,MAAJC,IAAI,GAAW;AACf,WAAO,KAAKD,SAAZ;AACH;;AAEO,MAAJC,IAAI,CAACA,IAAD,EAAe;AACnB,SAAKD,SAAL,GAAiBC,IAAjB;AACH;;AAEDC,EAAAA,cAAc,CAACC,WAAD,EAA8B;AACxC,WAAO,gBAAK,KAAKH,SAAV,EAAqBG,WAArB,CAAP;AACH;;AAEDC,EAAAA,cAAc,CAACC,SAAD,EAA4B;AACtC,WAAO,gBAAK,KAAKN,QAAV,EAAoBM,SAApB,CAAP;AACH;;AAEDC,EAAAA,cAAc,CAACD,SAAD,EAA4B;AACtC,WAAO,gBAAK,KAAKP,OAAV,EAAmBO,SAAnB,CAAP;AACH;;AAxFiE","sourcesContent":["\nimport { join } from 'path';\nimport { Folder, IFolder } from '../../folder';\n\nexport interface ILauncherFolder extends IFolder {\n    root: string;\n    game: string;\n    assets: string;\n    natives: string;\n    versions: string;\n    libraries: string;\n}\n\nexport class LauncherFolder extends Folder implements ILauncherFolder {\n\n    static from(launcherLocation: LauncherLocation): LauncherFolder {\n        if (launcherLocation instanceof LauncherFolder) return launcherLocation;\n        else if (typeof launcherLocation !== 'string') {\n            throw new Error('launcher location is not string');\n        }\n\n        return new LauncherFolder(launcherLocation);\n    }\n\n    constructor(\n        root: string,\n        public overrides: Partial<Omit<ILauncherFolder, 'root'>> = {},\n    ) {\n        super(root);\n    }\n\n    get game(): string {\n        return this.overrides.game || this.root;\n    }\n\n    set game(game: string) {\n        this.overrides.game = game;\n    }\n\n    /**\n     * The assets directory,\n     */\n    get assets(): string {\n        return this.overrides.assets || this.join('assets');\n    }\n\n    set assets(assets: string) {\n        this.overrides.assets = assets;\n    }\n\n    /**\n     * The native libraries directory.\n     */\n    get natives(): string {\n        return this.overrides.natives || this.join('natives');\n    }\n\n    set natives(natives: string) {\n        this.overrides.natives = natives;\n    }\n\n    get versions(): string {\n        return this.overrides.versions || this.join('versions');\n    }\n\n    set versions(versions: string) {\n        this.overrides.versions = versions;\n    }\n\n    /**\n     * The libraries directory.\n     */\n    get libraries(): string {\n        return this.overrides.libraries || this.join('libraries');\n    }\n\n    set libraries(libraries: string) {\n        this.overrides.libraries = libraries;\n    }\n\n    /**\n     * The libraries directory.\n     */\n    get libs(): string {\n        return this.libraries;\n    }\n\n    set libs(libs: string) {\n        this.libraries = libs;\n    }\n\n    getLibraryPath(libraryPath: string): string {\n        return join(this.libraries, libraryPath);\n    }\n\n    getVersionPath(versionId: string): string {\n        return join(this.versions, versionId);\n    }\n\n    getNativesPath(versionId: string): string {\n        return join(this.natives, versionId);\n    }\n\n}\n\nexport type LauncherLocation = string | Partial<ILauncherFolder>;\n"],"file":"launcher-folder.js"}