import { IArtifact } from '../../artifact';
import { ArtifactTask } from '../artifact-task';
export interface IArtifactExtractTaskProgress {
    total: number;
    completed: number;
}
export declare const enum ArtifactExtractTaskEvent {
    PROGRESS = "progress",
    EXCLUDE = "exclude",
    FINISH = "finish",
    ENTRY = "entry",
    ERROR = "error"
}
export interface IArtifactExtractTaskEntry {
    fileName: string;
    uncompressedSize: number;
    compressedSize: number;
}
export declare class ArtifactExtractTask extends ArtifactTask {
    readonly artifactRoot: string;
    readonly extractionRoot: string;
    exclude: string[];
    constructor(artifact: Partial<IArtifact>, artifactRoot: string, extractionRoot: string, exclude?: string[]);
    start(): Promise<this>;
}
