{"version":3,"sources":["../../../../src/components/authenticator/offline-authenticator/offline-authenticator.ts"],"names":["OfflineAuthenticator","Authenticator","constructor","username","uuid","generateToken","getAuth","accessToken","user","name","type","properties"],"mappings":";;;;;;;AACA;;AAEO,MAAMA,oBAAN,SAAmCC,4BAAnC,CAA0E;AAE7EC,EAAAA,WAAW,CACAC,QADA,EAEAC,IAAY,GAAGH,6BAAcI,aAAd,EAFf,EAGT;AACE;AADF,SAFSF,QAET,GAFSA,QAET;AAAA,SADSC,IACT,GADSA,IACT;AAED;;AAEDE,EAAAA,OAAO,GAAU;AACb,WAAO;AACHC,MAAAA,WAAW,EAAEN,6BAAcI,aAAd,EADV;AAEHG,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,KAAKN,QADT;AAEFC,QAAAA,IAAI,EAAE,KAAKA,IAFT;AAGFM,QAAAA,IAAI,EAAE,QAHJ;AAIFC,QAAAA,UAAU,EAAE;AAJV;AAFH,KAAP;AASH;;AAnB4E","sourcesContent":["\nimport { Authenticator, IAuth, IAuthProvider } from '../authenticator';\n\nexport class OfflineAuthenticator extends Authenticator implements IAuthProvider {\n\n    constructor(\n        public username: string,\n        public uuid: string = Authenticator.generateToken(),\n    ) {\n        super();\n    }\n\n    getAuth(): IAuth {\n        return {\n            accessToken: Authenticator.generateToken(),\n            user: {\n                name: this.username,\n                uuid: this.uuid,\n                type: 'legacy',\n                properties: {},\n            },\n        };\n    }\n\n}\n"],"file":"offline-authenticator.js"}