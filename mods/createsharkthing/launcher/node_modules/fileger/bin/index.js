const texts = require("./texts.js");
const package = require("../package.json")
const chalk = require("chalk")
const { File, Directory } = require("./../lib/index.js")

const config = new File(__dirname + "/config.json");

const getSelectedPath = async () => {

    const object = await config.readAsJSON();
    return object["selected"];

}

const help = () => {
    console.log(texts.help);
    console.log("")
    console.log("You are running on version: " + chalk.keyword("orange")(package.version) + "!")
}
const list = async () => {

    const dir = new Directory("./");

    const files = await dir.listFiles();
    const directories = await dir.listDirectories();

    const directoryColor = chalk.keyword("yellow");
    const fileColor = chalk.keyword("orange");

    const coloredDirectorieNames = directories.map(directory => directoryColor(directory.name));
    const coloredFileNames = files.map(file => fileColor(file.name));

    coloredDirectorieNames.forEach((element) => console.log(element))
    coloredFileNames.forEach((element) => console.log(element));

}
const select = async (path) => {

    if(path != null && path != "") {

        try {
            const currentObject = await config.readAsJSON();
            currentObject["selected"] = path;
            await config.writeAsJSON(currentObject);
            console.log(texts.select.success(path))
        } catch(err) {
            console.log(texts.select.failure(path));
        }
        
    } else {

        const currentObject = await config.readAsJSON();
        console.log(texts.select.noPath((currentObject["selected"] != null ? currentObject["selected"] : "Nothing!")))

    }

}
const size = async (path) => {

    if(path != null && path != "") {

        try {
            const file = new File(path);
            const size = await file.getFileSize();
            console.log(texts.size.success(path, size))
        } catch {
            console.log(texts.size.failure(path));
        }

    } else {

        const selectedPath = await getSelectedPath();

        try {
            const file = new File(selectedPath);
            const size = await file.getFileSize();
    
            console.log(texts.size.success(selectedPath, size));
        } catch {
            console.log(texts.size.failure(selectedPath))
        }

    }
    
}

module.exports = {
    help, list, select, size
}